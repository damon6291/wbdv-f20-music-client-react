{"ast":null,"code":"import{connect}from'react-redux';import{Search,Home}from'../components';import{findPlayLists as _findPlayLists}from'../actions/playListAction';import Service from'../services/Services';var stateToPropertyMapper=function stateToPropertyMapper(state){return{playLists:state.playListReducer.playLists};};var propertyToDispatchMapper=function propertyToDispatchMapper(dispatch){return{findPlayLists:function findPlayLists(json){return Service.searchForPlaylists(json).then(function(playLists){_findPlayLists(dispatch,playLists);});}};};export default{Search:connect(stateToPropertyMapper,propertyToDispatchMapper)(Search),Home:connect(stateToPropertyMapper,propertyToDispatchMapper)(Home)};","map":{"version":3,"sources":["/Users/damon/Desktop/2020Fall/CS4550/Web-Development/project/Frontend/src/containers/SearchContainer.js"],"names":["connect","Search","Home","findPlayLists","Service","stateToPropertyMapper","state","playLists","playListReducer","propertyToDispatchMapper","dispatch","json","searchForPlaylists","then"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,eAA7B,CACA,OAASC,aAAa,GAAbA,CAAAA,cAAT,KAA8B,2BAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,QAAY,CACxCC,SAAS,CAAED,KAAK,CAACE,eAAN,CAAsBD,SADO,CAAZ,EAA9B,CAIA,GAAME,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,QAAD,QAAe,CAC9CP,aAAa,CAAE,uBAACQ,IAAD,QACbP,CAAAA,OAAO,CAACQ,kBAAR,CAA2BD,IAA3B,EAAiCE,IAAjC,CAAsC,SAACN,SAAD,CAAe,CACnDJ,cAAa,CAACO,QAAD,CAAWH,SAAX,CAAb,CACD,CAFD,CADa,EAD+B,CAAf,EAAjC,CAOA,cAAe,CACbN,MAAM,CAAED,OAAO,CAACK,qBAAD,CAAwBI,wBAAxB,CAAP,CAAyDR,MAAzD,CADK,CAEbC,IAAI,CAAEF,OAAO,CAACK,qBAAD,CAAwBI,wBAAxB,CAAP,CAAyDP,IAAzD,CAFO,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { Search, Home } from '../components';\nimport { findPlayLists } from '../actions/playListAction';\nimport Service from '../services/Services';\n\nconst stateToPropertyMapper = (state) => ({\n  playLists: state.playListReducer.playLists,\n});\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  findPlayLists: (json) =>\n    Service.searchForPlaylists(json).then((playLists) => {\n      findPlayLists(dispatch, playLists);\n    }),\n});\n\nexport default {\n  Search: connect(stateToPropertyMapper, propertyToDispatchMapper)(Search),\n  Home: connect(stateToPropertyMapper, propertyToDispatchMapper)(Home),\n};\n"]},"metadata":{},"sourceType":"module"}