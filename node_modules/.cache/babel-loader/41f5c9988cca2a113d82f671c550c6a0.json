{"ast":null,"code":"import{connect}from'react-redux';import Details from'../components/Details/Details';import{findDetails as _findDetails}from'../actions/DetailsAction';import Service from'../services/Services';var stateToPropertyMapper=function stateToPropertyMapper(state){return{details:state.DetailsReducer.details,totalRuntime:state.DetailsReducer.totalRuntime};};var propertyToDispatchMapper=function propertyToDispatchMapper(dispatch){return{findDetails:function findDetails(json){return Service.getPlaylistInformation(json).then(function(details){_findDetails(dispatch,details);});}};};export default connect(stateToPropertyMapper,propertyToDispatchMapper)(Details);","map":{"version":3,"sources":["/Users/damon/Desktop/2020Fall/CS4550/Web-Development/project/Frontend/src/containers/DetailsContainer.js"],"names":["connect","Details","findDetails","Service","stateToPropertyMapper","state","details","DetailsReducer","totalRuntime","propertyToDispatchMapper","dispatch","json","getPlaylistInformation","then"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,OAASC,WAAW,GAAXA,CAAAA,YAAT,KAA4B,0BAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,QAAY,CACxCC,OAAO,CAAED,KAAK,CAACE,cAAN,CAAqBD,OADU,CAExCE,YAAY,CAAEH,KAAK,CAACE,cAAN,CAAqBC,YAFK,CAAZ,EAA9B,CAKA,GAAMC,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACC,QAAD,QAAe,CAC9CR,WAAW,CAAE,qBAACS,IAAD,QACXR,CAAAA,OAAO,CAACS,sBAAR,CAA+BD,IAA/B,EAAqCE,IAArC,CAA0C,SAACP,OAAD,CAAa,CACrDJ,YAAW,CAACQ,QAAD,CAAWJ,OAAX,CAAX,CACD,CAFD,CADW,EADiC,CAAf,EAAjC,CAOA,cAAeN,CAAAA,OAAO,CAACI,qBAAD,CAAwBK,wBAAxB,CAAP,CAAyDR,OAAzD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport Details from '../components/Details/Details';\nimport { findDetails } from '../actions/DetailsAction';\nimport Service from '../services/Services';\n\nconst stateToPropertyMapper = (state) => ({\n  details: state.DetailsReducer.details,\n  totalRuntime: state.DetailsReducer.totalRuntime,\n});\n\nconst propertyToDispatchMapper = (dispatch) => ({\n  findDetails: (json) =>\n    Service.getPlaylistInformation(json).then((details) => {\n      findDetails(dispatch, details);\n    }),\n});\n\nexport default connect(stateToPropertyMapper, propertyToDispatchMapper)(Details);\n"]},"metadata":{},"sourceType":"module"}